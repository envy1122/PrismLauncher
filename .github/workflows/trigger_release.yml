name: Build Application and Make Release

on:
  push:
    tags:
      - "*"

jobs:
  build_release:
    name: Build Release
    uses: ./.github/workflows/build.yml
    with:
      build_type: Release
      is_qt_cached: false

  create_release:
    needs: build_release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "true"
          path: "PrismLauncher-source"
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Grab and store version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV
      - name: Package artifacts properly
        run: |
          mv ${{ github.workspace }}/PrismLauncher-source PrismLauncher-${{ env.VERSION }}
          for d in PrismLauncher-Windows-MinGW-w64*; do
            cd "${d}" || continue
            INST="$(echo -n ${d} | grep -o Setup || true)"
            PORT="$(echo -n ${d} | grep -o Portable || true)"
            NAME="PrismLauncher-Windows-MinGW-w64"
            test -z "${PORT}" || NAME="${NAME}-Portable"
            test -z "${INST}" || mv PrismLauncher-*.exe ../${NAME}-Setup-${{ env.VERSION }}.exe
            test -n "${INST}" || zip -r -9 "../${NAME}-${{ env.VERSION }}.zip" *
            cd ..
          done

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: Prism Launcher ${{ env.VERSION }}
          draft: true
          prerelease: false
          files: |
            PrismLauncher-Windows-MinGW-w64-${{ env.VERSION }}.zip
            PrismLauncher-Windows-MinGW-w64-Portable-${{ env.VERSION }}.zip
            PrismLauncher-Windows-MinGW-w64-Setup-${{ env.VERSION }}.exe
